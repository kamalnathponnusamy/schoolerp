-- Text to SQL original prompt:
-- can you generate create queries for all tables to add complete query in mysql database
-- 
CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    email VARCHAR(100) NOT NULL UNIQUE,
    password_hash VARCHAR(255) NOT NULL,
    role VARCHAR(20) NOT NULL CHECK (role IN ('admin', 'teacher', 'student')),
    full_name VARCHAR(100) NOT NULL,
    phone VARCHAR(15),
    date_of_birth DATE,
    address TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE classes (
    id SERIAL PRIMARY KEY,
    class_name VARCHAR(50) NOT NULL,
    section VARCHAR(10) NOT NULL,
    class_teacher_id INTEGER REFERENCES users(id),
    academic_year VARCHAR(10) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE subjects (
    id SERIAL PRIMARY KEY,
    subject_name VARCHAR(100) NOT NULL,
    subject_code VARCHAR(20) NOT NULL UNIQUE,
    description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE class_subject_teacher (
    id SERIAL PRIMARY KEY,
    class_id INTEGER REFERENCES classes(id) ON DELETE CASCADE,
    subject_id INTEGER REFERENCES subjects(id) ON DELETE CASCADE,
    user_id INTEGER REFERENCES users(id) ON DELETE SET NULL,
    academic_year VARCHAR(20) DEFAULT '2024-25',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE (class_id, subject_id, academic_year)
);

CREATE TABLE students (
    id SERIAL PRIMARY KEY,
    student_id VARCHAR(20) NOT NULL UNIQUE,
    user_id INTEGER REFERENCES users(id),
    class_id INTEGER REFERENCES classes(id),
    admission_number VARCHAR(50) NOT NULL UNIQUE,
    admission_date DATE NOT NULL,
    father_name VARCHAR(100),
    mother_name VARCHAR(100),
    guardian_phone VARCHAR(15),
    blood_group VARCHAR(5),
    transport_opted BOOLEAN DEFAULT false,
    transport_route_id INTEGER,
    fee_structure JSON,
    status VARCHAR(20) DEFAULT 'active' CHECK (status IN ('active', 'inactive', 'graduated')),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE teachers (
    id SERIAL PRIMARY KEY,
    teacher_id VARCHAR(20) NOT NULL UNIQUE,
    user_id INTEGER REFERENCES users(id),
    name VARCHAR(100) NOT NULL,
    subject VARCHAR(50),
    phone VARCHAR(15),
    email VARCHAR(100) UNIQUE,
    assigned_classes TEXT,
    qualification VARCHAR(100),
    experience_years INTEGER DEFAULT 0,
    salary DECIMAL(10,2),
    joining_date DATE DEFAULT (CURDATE()),
    photo_url TEXT,
    qr_code TEXT,
    status VARCHAR(20) DEFAULT 'active',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE attendance (
    id SERIAL PRIMARY KEY,
    student_id INTEGER,
    date DATE NOT NULL,
    status VARCHAR(20) NOT NULL CHECK (status IN ('present', 'absent', 'late', 'half_day')),
    marked_by INTEGER REFERENCES users(id),
    remarks TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE (student_id, date)
);

CREATE TABLE exams (
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    exam_name VARCHAR(200) NOT NULL,
    class_id BIGINT UNSIGNED,
    subject_id BIGINT UNSIGNED,
    exam_date DATE NOT NULL,
    max_marks INTEGER NOT NULL,
    duration_minutes INTEGER,
    exam_type VARCHAR(50) CHECK (exam_type IN ('unit_test', 'quarterly', 'half_yearly', 'annual')),
    start_time TIME,
    end_time TIME,
    passing_marks INTEGER,
    syllabus TEXT,
    status VARCHAR(20) DEFAULT 'scheduled',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (class_id) REFERENCES classes(id) ON DELETE SET NULL,
    FOREIGN KEY (subject_id) REFERENCES subjects(id) ON DELETE SET NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE exam_results (
    id SERIAL PRIMARY KEY,
    exam_id INTEGER REFERENCES exams(id),
    student_id INTEGER,
    marks_obtained DECIMAL(5,2) NOT NULL,
    grade VARCHAR(5),
    remarks TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE (exam_id, student_id)
);

CREATE TABLE fees (
    id SERIAL PRIMARY KEY,
    student_id INTEGER,
    academic_year VARCHAR(10) NOT NULL,
    term VARCHAR(20) NOT NULL,
    tuition_fee DECIMAL(10,2) DEFAULT 0,
    transport_fee DECIMAL(10,2) DEFAULT 0,
    lab_fee DECIMAL(10,2) DEFAULT 0,
    library_fee DECIMAL(10,2) DEFAULT 0,
    sports_fee DECIMAL(10,2) DEFAULT 0,
    other_fees DECIMAL(10,2) DEFAULT 0,
    total_amount DECIMAL(10,2) NOT NULL,
    paid_amount DECIMAL(10,2) DEFAULT 0,
    due_date DATE NOT NULL,
    status VARCHAR(20) DEFAULT 'pending' CHECK (status IN ('pending', 'paid', 'overdue')),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE fee_payments (
    id SERIAL PRIMARY KEY,
    fee_id INTEGER REFERENCES fees(id),
    payment_date DATE DEFAULT  (CURDATE()),
    amount_paid DECIMAL(10,2) NOT NULL,
    payment_method VARCHAR(50),
    transaction_id VARCHAR(100),
    receipt_number VARCHAR(50) UNIQUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE homework (
    id SERIAL PRIMARY KEY,
    class_id INTEGER REFERENCES classes(id),
    subject_id INTEGER,
    teacher_id INTEGER REFERENCES users(id),
    title VARCHAR(200) NOT NULL,
    description TEXT,
    due_date DATE NOT NULL,
    assigned_date DATE DEFAULT  (CURDATE()),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE inventory (
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    item_name VARCHAR(200) NOT NULL,
    item_code VARCHAR(50) NOT NULL UNIQUE,
    category VARCHAR(100) NOT NULL,
    description TEXT,
    quantity_available INTEGER NOT NULL DEFAULT 0,
    unit_price DECIMAL(10,2),
    supplier_name VARCHAR(200),
    purchase_date DATE,
    expiry_date DATE,
    location VARCHAR(100),
    status VARCHAR(20) DEFAULT 'active',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT chk_inventory_status CHECK (status IN ('active', 'inactive', 'damaged'))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE inventory_transactions (
    id SERIAL PRIMARY KEY,
    item_id INTEGER REFERENCES inventory(id),
    transaction_type VARCHAR(20) NOT NULL,
    quantity INTEGER NOT NULL,
    student_id INTEGER,
    teacher_id INTEGER REFERENCES teachers(id),
    transaction_date DATE DEFAULT  (CURDATE()),
    notes TEXT,
    created_by INTEGER REFERENCES users(id),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE inventory_usage (
    id SERIAL PRIMARY KEY,
    inventory_id INTEGER REFERENCES inventory(id),
    used_by INTEGER REFERENCES users(id),
    quantity_used INTEGER NOT NULL,
    usage_date DATE DEFAULT  (CURDATE()),
    purpose TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE notifications (
    id SERIAL PRIMARY KEY,
    title VARCHAR(200) NOT NULL,
    message TEXT NOT NULL,
    type VARCHAR(50) DEFAULT 'general',
    target_audience VARCHAR(50) DEFAULT 'all',
    class_ids INTEGER,
    is_urgent BOOLEAN DEFAULT false,
    scheduled_date DATE,
    expiry_date DATE,
    created_by INTEGER REFERENCES users(id),
    status VARCHAR(20) DEFAULT 'active',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE student_remarks (
    id SERIAL PRIMARY KEY,
    student_id INTEGER,
    teacher_id INTEGER REFERENCES users(id),
    date DATE DEFAULT  (CURDATE()),
    remark_type VARCHAR(20) CHECK (remark_type IN ('positive', 'negative', 'neutral')),
    remark TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE student_transport (
    id SERIAL PRIMARY KEY,
    student_id INTEGER,
    route_id INTEGER REFERENCES transport_routes(id),
    pickup_point VARCHAR(100),
    monthly_fee DECIMAL(8,2),
    status VARCHAR(20) DEFAULT 'active',
    assigned_date DATE DEFAULT  (CURDATE())
);

CREATE TABLE system_settings (
    id INT AUTO_INCREMENT PRIMARY KEY,
    school_name VARCHAR(100) DEFAULT 'Tamil Nadu Model School',
    logo_url TEXT,  -- Removed DEFAULT value
    academic_year VARCHAR(20) DEFAULT '2024-25',
    contact_email VARCHAR(100) DEFAULT 'admin@tnmodelschool.edu',
    contact_phone VARCHAR(20) DEFAULT '+91-9876543210',
    address TEXT,  -- Removed DEFAULT value
    transport_base_fee INTEGER DEFAULT 1500,
    enable_homework_tracking BOOLEAN DEFAULT true,
    enable_sms_alerts BOOLEAN DEFAULT true,
    enable_parent_portal BOOLEAN DEFAULT true,
    primary_color VARCHAR(10) DEFAULT '#3b82f6',
    secondary_color VARCHAR(10) DEFAULT '#1e40af',
    dark_mode_enabled BOOLEAN DEFAULT false,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE timetable (
    id SERIAL PRIMARY KEY,
    class_id INTEGER REFERENCES classes(id),
    subject_id INTEGER,
    teacher_id INTEGER REFERENCES users(id),
    day_of_week INTEGER CHECK (day_of_week BETWEEN 1 AND 7),
    start_time TIME NOT NULL,
    end_time TIME NOT NULL,
    room_number VARCHAR(20),
    academic_year VARCHAR(10) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE transport_routes (
    id SERIAL PRIMARY KEY,
    route_name VARCHAR(100) NOT NULL,
    route_code VARCHAR(20) NOT NULL UNIQUE,
    pickup_points TEXT,
    monthly_fee DECIMAL(10,2) NOT NULL,
    driver_name VARCHAR(100),
    driver_phone VARCHAR(15),
    vehicle_number VARCHAR(20),
    capacity INTEGER,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
); commit;
