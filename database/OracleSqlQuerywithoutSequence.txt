-- Text to SQL original prompt:
-- can you please share me the create query for all tables with index scripts along with foreign key constraints also so I can run the query in oracle db, complete database tables has to be there in create script...I can see the query generation get stopped while creating index so please complete everything and give final queries
-- Create tables
CREATE TABLE users (
    id INTEGER PRIMARY KEY,
    username VARCHAR(50) UNIQUE NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    role VARCHAR(20) NOT NULL CHECK (role IN ('admin', 'teacher', 'student')),
    full_name VARCHAR(100) NOT NULL,
    phone VARCHAR(15),
    date_of_birth DATE,
    address CLOB,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE classes (
    id INTEGER PRIMARY KEY,
    class_name VARCHAR(50) NOT NULL,
    section VARCHAR(10) NOT NULL,
    class_teacher_id INTEGER,
    academic_year VARCHAR(10) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_class_teacher FOREIGN KEY (class_teacher_id) REFERENCES users(id)
);

CREATE TABLE subjects (
    id INTEGER PRIMARY KEY,
    subject_name VARCHAR(100) NOT NULL,
    subject_code VARCHAR(20) UNIQUE NOT NULL,
    description CLOB,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE class_subject_teacher (
    id INTEGER PRIMARY KEY,
    class_id INTEGER,
    subject_id INTEGER,
    user_id INTEGER,
    academic_year VARCHAR(20) DEFAULT '2024-25',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_cst_class FOREIGN KEY (class_id) REFERENCES classes(id) ON DELETE CASCADE,
    CONSTRAINT fk_cst_subject FOREIGN KEY (subject_id) REFERENCES subjects(id) ON DELETE CASCADE,
    CONSTRAINT fk_cst_user FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE SET NULL,
    CONSTRAINT uk_class_subject_year UNIQUE (class_id, subject_id, academic_year)
);

CREATE TABLE students (
    id INTEGER PRIMARY KEY,
    student_id VARCHAR(20) UNIQUE NOT NULL,
    user_id INTEGER,
    class_id INTEGER,
    admission_number VARCHAR(50) UNIQUE NOT NULL,
    admission_date DATE NOT NULL,
    father_name VARCHAR(100),
    mother_name VARCHAR(100),
    guardian_phone VARCHAR(15),
    blood_group VARCHAR(5),
    transport_opted NUMBER(1) DEFAULT 0,
    transport_route_id INTEGER,
    fee_structure CLOB,
    status VARCHAR(20) DEFAULT 'active' CHECK (status IN ('active', 'inactive', 'graduated')),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_student_user FOREIGN KEY (user_id) REFERENCES users(id),
    CONSTRAINT fk_student_class FOREIGN KEY (class_id) REFERENCES classes(id)
);

CREATE TABLE teachers (
    id INTEGER PRIMARY KEY,
    teacher_id VARCHAR(20) UNIQUE NOT NULL,
    user_id INTEGER,
    name VARCHAR(100) NOT NULL,
    subject VARCHAR(50),
    phone VARCHAR(15),
    email VARCHAR(100) UNIQUE,
    assigned_classes CLOB,
    qualification VARCHAR(100),
    experience_years INTEGER DEFAULT 0,
    salary NUMBER(10,2),
    joining_date DATE DEFAULT CURRENT_DATE,
    photo_url CLOB,
    qr_code CLOB,
    status VARCHAR(20) DEFAULT 'active',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_teacher_user FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE attendance (
    id INTEGER PRIMARY KEY,
    student_id INTEGER,
    date DATE NOT NULL,
    status VARCHAR(20) NOT NULL CHECK (status IN ('present', 'absent', 'late', 'half_day')),
    marked_by INTEGER,
    remarks CLOB,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_attendance_marked_by FOREIGN KEY (marked_by) REFERENCES users(id),
    CONSTRAINT uk_student_date UNIQUE (student_id, date)
);

CREATE TABLE exams (
    id INTEGER PRIMARY KEY,
    exam_name VARCHAR(200) NOT NULL,
    class_id INTEGER,
    subject_id INTEGER,
    exam_date DATE NOT NULL,
    max_marks INTEGER NOT NULL,
    duration_minutes INTEGER,
    exam_type VARCHAR(50) CHECK (exam_type IN ('unit_test', 'quarterly', 'half_yearly', 'annual')),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_exam_class FOREIGN KEY (class_id) REFERENCES classes(id)
);

CREATE TABLE exam_results (
    id INTEGER PRIMARY KEY,
    exam_id INTEGER,
    student_id INTEGER,
    marks_obtained NUMBER(5,2) NOT NULL,
    grade VARCHAR(5),
    remarks CLOB,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_result_exam FOREIGN KEY (exam_id) REFERENCES exams(id),
    CONSTRAINT uk_exam_student UNIQUE (exam_id, student_id)
);

CREATE TABLE fees (
    id INTEGER PRIMARY KEY,
    student_id INTEGER,
    academic_year VARCHAR(10) NOT NULL,
    term VARCHAR(20) NOT NULL,
    tuition_fee NUMBER(10,2) DEFAULT 0,
    transport_fee NUMBER(10,2) DEFAULT 0,
    lab_fee NUMBER(10,2) DEFAULT 0,
    library_fee NUMBER(10,2) DEFAULT 0,
    sports_fee NUMBER(10,2) DEFAULT 0,
    other_fees NUMBER(10,2) DEFAULT 0,
    total_amount NUMBER(10,2) NOT NULL,
    paid_amount NUMBER(10,2) DEFAULT 0,
    due_date DATE NOT NULL,
    status VARCHAR(20) DEFAULT 'pending' CHECK (status IN ('pending', 'paid', 'overdue')),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE fee_payments (
    id INTEGER PRIMARY KEY,
    fee_id INTEGER,
    payment_date DATE DEFAULT CURRENT_DATE,
    amount_paid NUMBER(10,2) NOT NULL,
    payment_method VARCHAR(50),
    transaction_id VARCHAR(100),
    receipt_number VARCHAR(50) UNIQUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_payment_fee FOREIGN KEY (fee_id) REFERENCES fees(id)
);

CREATE TABLE homework (
    id INTEGER PRIMARY KEY,
    class_id INTEGER,
    subject_id INTEGER,
    teacher_id INTEGER,
    title VARCHAR(200) NOT NULL,
    description CLOB,
    due_date DATE NOT NULL,
    assigned_date DATE DEFAULT CURRENT_DATE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_homework_class FOREIGN KEY (class_id) REFERENCES classes(id),
    CONSTRAINT fk_homework_teacher FOREIGN KEY (teacher_id) REFERENCES users(id)
);

CREATE TABLE timetable (
    id INTEGER PRIMARY KEY,
    class_id INTEGER,
    subject_id INTEGER,
    teacher_id INTEGER,
    day_of_week INTEGER CHECK (day_of_week BETWEEN 1 AND 7),
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    room_number VARCHAR(20),
    academic_year VARCHAR(10) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_timetable_class FOREIGN KEY (class_id) REFERENCES classes(id),
    CONSTRAINT fk_timetable_teacher FOREIGN KEY (teacher_id) REFERENCES users(id)
);

CREATE TABLE transport_routes (
    id INTEGER PRIMARY KEY,
    route_name VARCHAR(100) NOT NULL,
    route_code VARCHAR(20) UNIQUE NOT NULL,
    pickup_points CLOB,
    monthly_fee NUMBER(10,2) NOT NULL,
    driver_name VARCHAR(100),
    driver_phone VARCHAR(15),
    vehicle_number VARCHAR(20),
    capacity INTEGER,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE student_transport (
    id INTEGER PRIMARY KEY,
    student_id INTEGER,
    route_id INTEGER,
    pickup_point VARCHAR(100),
    monthly_fee NUMBER(8,2),
    status VARCHAR(20) DEFAULT 'active',
    assigned_date DATE DEFAULT CURRENT_DATE,
    CONSTRAINT fk_student_transport_route FOREIGN KEY (route_id) REFERENCES transport_routes(id)
);

CREATE TABLE inventory (
    id INTEGER PRIMARY KEY,
    item_name VARCHAR(200) NOT NULL,
    item_code VARCHAR(50) UNIQUE NOT NULL,
    category VARCHAR(100) NOT NULL,
    description CLOB,
    quantity_available INTEGER DEFAULT 0 NOT NULL,
    unit_price NUMBER(10,2),
    supplier_name VARCHAR(200),
    purchase_date DATE,
    expiry_date DATE,
    location VARCHAR(100),
    status VARCHAR(20) DEFAULT 'active' CHECK (status IN ('active', 'inactive', 'damaged')),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE inventory_transactions (
    id INTEGER PRIMARY KEY,
    item_id INTEGER,
    transaction_type VARCHAR(20) NOT NULL,
    quantity INTEGER NOT NULL,
    student_id INTEGER,
    teacher_id INTEGER,
    transaction_date DATE DEFAULT CURRENT_DATE,
    notes CLOB,
    created_by INTEGER,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_inventory_transaction_item FOREIGN KEY (item_id) REFERENCES inventory(id),
    CONSTRAINT fk_inventory_transaction_teacher FOREIGN KEY (teacher_id) REFERENCES teachers(id),
    CONSTRAINT fk_inventory_transaction_created_by FOREIGN KEY (created_by) REFERENCES users(id)
);

CREATE TABLE inventory_usage (
    id INTEGER PRIMARY KEY,
    inventory_id INTEGER,
    used_by INTEGER,
    quantity_used INTEGER NOT NULL,
    usage_date DATE DEFAULT CURRENT_DATE,
    purpose CLOB,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_inventory_usage_inventory FOREIGN KEY (inventory_id) REFERENCES inventory(id),
    CONSTRAINT fk_inventory_usage_used_by FOREIGN KEY (used_by) REFERENCES users(id)
);

CREATE TABLE student_remarks (
    id INTEGER PRIMARY KEY,
    student_id INTEGER,
    teacher_id INTEGER,
    date DATE DEFAULT CURRENT_DATE,
    remark_type VARCHAR(20) CHECK (remark_type IN ('positive', 'negative', 'neutral')),
    remark CLOB NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_student_remark_teacher FOREIGN KEY (teacher_id) REFERENCES users(id)
);

CREATE TABLE notifications (
    id INTEGER PRIMARY KEY,
    title VARCHAR(200) NOT NULL,
    message CLOB NOT NULL,
    type VARCHAR(50) DEFAULT 'general',
    target_audience VARCHAR(50) DEFAULT 'all',
    class_ids VARCHAR(255),
    is_urgent NUMBER(1) DEFAULT 0,
    scheduled_date DATE,
    expiry_date DATE,
    created_by INTEGER,
    status VARCHAR(20) DEFAULT 'active',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_notification_created_by FOREIGN KEY (created_by) REFERENCES users(id)
);

CREATE TABLE system_settings (
    id INTEGER PRIMARY KEY,
    school_name VARCHAR(100) DEFAULT 'Tamil Nadu Model School',
    logo_url CLOB DEFAULT '/placeholder.svg?height=40&width=40&text=TN',
    academic_year VARCHAR(20) DEFAULT '2024-25',
    contact_email VARCHAR(100) DEFAULT 'admin@tnmodelschool.edu',
    contact_phone VARCHAR(20) DEFAULT '+91-9876543210',
    address CLOB DEFAULT 'No. 123, Anna Salai, Chennai, Tamil Nadu 600002',
    transport_base_fee INTEGER DEFAULT 1500,
    enable_homework_tracking NUMBER(1) DEFAULT 1,
    enable_sms_alerts NUMBER(1) DEFAULT 1,
    enable_parent_portal NUMBER(1) DEFAULT 1,
    primary_color VARCHAR(10) DEFAULT '#3b82f6',
    secondary_color VARCHAR(10) DEFAULT '#1e40af',
    dark_mode_enabled NUMBER(1) DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create indexes
CREATE INDEX idx_users_role ON users(role);
CREATE INDEX idx_classes_academic_year ON classes(academic_year);
CREATE INDEX idx_students_class_id ON students(class_id);
CREATE INDEX idx_attendance_date ON attendance(date);
CREATE INDEX idx_exams_class_id ON exams(class_id);
CREATE INDEX idx_exam_results_exam_id ON exam_results(exam_id);
CREATE INDEX idx_fees_student_id ON fees(student_id);
CREATE INDEX idx_homework_class_id ON homework(class_id);
CREATE INDEX idx_timetable_class_id ON timetable(class_id);
CREATE INDEX idx_inventory_category ON inventory(category);
CREATE INDEX idx_notifications_target_audience ON notifications(target_audience);